
function geconf(t)
-- General
t.data_directory = "data/"   -- The directory containing the game data (sprites, musics animations ...)
t.config_file  = "ge.conf"   -- The name of the file to read the engine config from (this is for overide)
t.build_version = "160131"     -- The version number of the goat engine this config was made for.

t.dev_ctx = false            -- Indicates whether or not we are in a development context. 
                             -- When disabled (many settings get overidden):
                                 -- the dev console gets turned off
                                 -- Scripts automatic reloading is turned off
                                 -- any debug rendering gets turned off
                                 -- logger printing to screen gets turnd off
                             -- When turned the title bar (on desktop) of the game will display
                             -- the current resolution

-- GAME INFO
t.game = {}
-- The version number of the game (string)
t.game.version = "1.0.2"
-- The window title (string)
t.game.name = "Untitled Game"
-- Enable fullscreen mode on desktop
t.game.fullscreen = false
t.game.resolution = {}
t.game.resolution.width = -1
t.game.resolution.height = -1


-- LOGGER
t.logger = {}
-- The directory under the data directory
t.logger.directory = "LOG/"
 -- The pattern log files naming will follow %date% will include de date
t.logger.file_name_format = "%date%.gelog"                  
-- The levels to include when logging
t.logger.levels = {'INFO','ERROR','FATAL','ASSERT'}

t.logger.print_screen = false         -- Wether or not we want to print to screen


-- Screen Manager
t.screens = {}
t.screens.screen_ext = ".ges"         -- The extension to use for game screen files
t.screens.directory = "screens/"      -- The directory containing the screens (under data_directory)
t.screens.main_screen = "main.ges"    -- The name of the main screen (without the extension)
t.screens.level_directory = "levels/" -- The directory containing the levels (under data_directory)


-- Scripting
t.scripting = {}
t.scripting.auto_reload = false     -- Auto reload scripts when their source code changes
t.scripting.directory = "scripts/"     -- The directory storing the scripts

-- Level Editor
t.level_editor = {}
t.level_editor.enabled = true

t.ui = {}
-- On screen HUD dcebugs
t.ui.debug = false




-- CONSOLE
t.console = {}
-- Enable the console dev console
t.console.enabled = false            




-- MODULES
t.modules = {}
t.modules.input = {}
t.modules.input.keyboard = true
t.modules.input.gamepad = false
t.modules.input.touch = true
t.modules.audio = true
t.modules.graphics = true

end

function postconf(t)

    -- Append data directory to all directories
    t.logger.directory        = ensureDataDirectory(t.logger.directory, t)
    t.screens.directory       = ensureDataDirectory(t.screens.directory, t)
    t.screens.level_directory = ensureDataDirectory(t.screens.level_directory, t)
    t.scripting.directory     = ensureDataDirectory(t.scripting.directory, t)


    -- Automatically turn off some properties if dev_ctx is off
    if not t.dev_ctx then
        t.console.enabled = false
        t.scripting.auto_reload = false
        t.logger.print_screen = false
        t.ui.debug = false
    end


end

-- Makes sure the path is preceded with the data dir
function ensureDataDirectory(directory,t)
    local out
    if not directory.find(directory, t.data_directory) then
        out = t.data_directory .. directory
    end
    return  out
end